#!/bin/bash
set -u
set -e
#Remeber to have env Variables for:
# ORANGEFS_KO
# ORANGEFS_PATH
# PVFS2TAB_FILE

CWD=$(pwd)
#ORANGEFS_PATH=/mnt/repo/software/modules-install/orangefs/2.9.8

if [ $# -eq 0 ]
then
        echo "$(basename $0) <conf file> <server list> <client list> <mount_loc>"
        exit 0
fi

conf_file=$1
server_loc=$2
client_loc=$3
client_dir=$4

#Input Variables
server_dir=$(awk '$1 ~ /DataStorageSpace/ {print $2}' $conf_file )
meta_dir=$(awk '$1 ~ /MetadataStorageSpace/ {print $2}' $conf_file )

#General Variables
server_list=( $(cat $server_loc) )
client_list=( $(cat $client_loc) )

#Config PFS
name="orangefs" #TODO: Allow renaming
comm_port=3334  #TODO: Allow changing
echo $CWD
count=0

set +e
echo "Setting up servers"
echo "Cleanup (can show fail if nothing to clean)"
parallel-ssh -h ${server_loc} "killall pvfs2-server"
parallel-ssh -h ${server_loc} "rm -rf ${server_dir}"
parallel-ssh -h ${server_loc} "rm -rf ${meta_dir}"
echo "Deploymenmt"
parallel-ssh -h ${server_loc} "mkdir -p ${server_dir}"
parallel-ssh -h ${server_loc} "mkdir -p ${meta_dir}"
parallel-ssh -h ${server_loc} "${ORANGEFS_PATH}/sbin/pvfs2-server -f -a "'$(hostname)'" ${conf_file}"
parallel-ssh -h ${server_loc} "${ORANGEFS_PATH}/sbin/pvfs2-server -a "'$(hostname)'" ${conf_file}"
echo "Report"
parallel-ssh -h ${server_loc} -i "(ps -aef | grep pvfs2 | grep -v grep) || echo 'Server deployment correct'"

echo "Starting clients"
echo "Cleanup (can show fail if nothing to clean)"
parallel-ssh -h ${client_loc} "sudo umount -t pvfs2 ${client_dir}"
parallel-ssh -h ${client_loc} "sudo kill-pvfs2-client"
parallel-ssh -h ${client_loc} "sudo rmmod orangefs"
echo "Deployment"
parallel-ssh -h ${client_loc} "mkdir -p ${client_dir}"
parallel-ssh -h ${client_loc} "sudo modprobe orangefs"
parallel-ssh -h ${client_loc} "sudo ${ORANGEFS_PATH}/sbin/pvfs2-client -p ${ORANGEFS_PATH}/sbin/pvfs2-client-core"
parallel-ssh -h ${client_loc} "sudo mount -t pvfs2 tcp://${server_list[0]}:${comm_port}/${name} ${client_dir}"
echo "Report"
parallel-ssh -h ${client_loc} -i "(ps -aef | grep pvfs2 | grep -v grep) || echo 'Client kill correct'"
parallel-ssh -h ${client_loc} -i "(mount | grep pvfs2) || echo 'Umount correct'"
parallel-ssh -h ${client_loc} -i "(lsmod | grep orangefs) || echo 'Kmod removed correct'"
